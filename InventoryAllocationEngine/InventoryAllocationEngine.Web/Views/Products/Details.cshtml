@using InventoryAllocationEngine.Web.Services.Enumerations
@model InventoryAllocationEngine.Web.Models.Product
@{
   ViewBag.Title = Model.Description;

   int overshort = Model.QuantityAvailable - Model.OrderItems.Sum(oi => oi.QuantityOrdered);
}

<h2 class="page-header">
   @Model.Description
</h2>

<p>
   Pending Orders: @Model.OrderItems.Sum(oi => oi.QuantityOrdered)
</p>
<p>
   Quantity Available: @Model.QuantityAvailable
</p>
<p>
   Over/(Short): <span class="@(overshort < 0 ? "text-danger" : "")"> @(overshort < 0 ? "(" + Math.Abs(overshort) + ")" : overshort.ToString())</span>
</p>
<div>

   @using (Html.BeginForm("Allocate", "Products", FormMethod.Post, new {@class = "form-inline", style="margin-top: 20px;"}))
   {
      @Html.HiddenFor(model => model.Id)
      <div class="form-group">
         @Html.Label("allocationMethod", "Allocation method: ")

         @Html.DropDownList("allocationMethod",
            EnumHelper.GetSelectList(typeof(AllocationMethod)),
            new {@class = "form-control"})

         &nbsp;&nbsp;

         @Html.Label("weighting", "Weighting: ")

         @Html.DropDownList("weighting", new List<SelectListItem>
         {
            new SelectListItem
            {
               Text = "None",
               Value = "0"
            },
            new SelectListItem
            {
               Text = "Light",
               Value = "0.25"
            },
            new SelectListItem
            {
               Text = "Moderate",
               Value = "0.5"
            },
            new SelectListItem
            {
               Text = "Heavy",
               Value = "0.75"
            },
            new SelectListItem
            {
               Text = "Full",
               Value = "1"
            }
         }, new {@class = "form-control"})

         &nbsp;&nbsp;
         
      </div>

      <button type="submit" class="btn btn-primary">Allocate</button>
   }

</div>

<h3>Orders</h3>

<table class="table">
   <thead>
   <tr>
      <th>
         Order No.
      </th>
      <th>
         Date Received
      </th>
      <th>
         Customer
      </th>
      <th>
         Qty. Ordered
      </th>
      <th>
         Unweighted Allocation
      </th>
      <th>
         Weighted Allocation
      </th>
   </tr>
   </thead>
   <tbody>
   @foreach (var orderItem in Model.OrderItems.OrderBy(oi => oi.Order.DateReceived))
   {
      <tr>
         <td>
            @orderItem.Order.Id
         </td>
         <td>
            @orderItem.Order.DateReceived.ToString("g")
         </td>
         <td>
            @orderItem.Order.Customer.Name
         </td>
         <td>
            @orderItem.QuantityOrdered
         </td>
         <td>
            @orderItem.QuantityAllocatedUnweighted
         </td>
         <td>
            @orderItem.QuantityAllocatedWeighted
         </td>
      </tr>
   }
   <tr>
      <th colspan="3" class="text-right">
         Totals:
      </th>
      <th>
         @Model.OrderItems.Sum(oi => oi.QuantityOrdered)
      </th>
      <th>
         @Model.OrderItems.Sum(oi => oi.QuantityAllocatedUnweighted)
      </th>
      <th>
         @Model.OrderItems.Sum(oi => oi.QuantityAllocatedWeighted)
      </th>
   </tr>
   </tbody>
</table>